import pygame
import random
from Entity import Entity
from AliveEntity import AliveEntity
from Alien import Alien
from Shot import Shot

white = 255, 255, 255
black = 0, 0, 0

class Game():
    def __init__(self, startScore, aliens, player, width, height, size):
        self.score = startScore
        self.display = Display()
        self.ticks = 0
        self.player= player
        self.aliens= aliens 
        self.specialAlien = Alien(0, 0, 0, "img/shot.png", 0, width, height) #dummy assignment
        self.specialAlien.consider = False
        self.running = True
        self.aliensExist = True
        self.screen = pygame.display.set_mode(size)
        self.width = width
        self.height = height
        
    def addScore(self, toAdd):
        self.score = self.score + toAdd
    
    def isLucky(self, chance):
        return random.random() > chance
        
    def spawnSpecialAlien(self):
        print("SPECIALALIEN")
        self.specialAlien = AliveEntity(100, 100, 90, 2, 0, "img/sprite8.png", 1, gamewidth, gameheight)
        self.specialAlien.posBoundaryRight = self.width + 40

    def makeShot(self, x, y, speed):
        shot = Shot(x, y, 0, speed, gameWidth, gameHeight)
        return shot
        
    def checkGameStop(self, event):
        if event.type == pygame.QUIT: 
            self.running = False

    def computeInput(self):
        for event in pygame.event.get():
            self.checkGameStop(event)
        pressed_keys = pygame.key.get_pressed()
        self.checkGoLeft(pressed_keys)
        self.checkGoRight(pressed_keys)
        if pressed_keys[pygame.K_SPACE] and self.isPauseBetweenShotsBig():
            shot = self.makeShot(self.player.x, self.player.y, -1.25)
            self.playerShots.append(shot)
            self.lastShot = self.ticks

    def drawSpecialAlien(self):
        if self.specialAlien.consider:
            self.specialAlien.update()
            if not self.specialAlien.isInScreen():
                self.specialAlien.consider = False
            self.screen.blit(self.specialAlien.image, self.specialAlien.rect)
    
    def drawAlien(self, alien):
        if self.ticks % 200 == 0:
            alien.update()
        alien.draw()
        
    def drawAliens(self):
        self.aliensExist = False
        self.drawSpecialAlien()
        for row in self.aliens:
            for col in row:
                if col is not None:
                    self.aliensExist = True
                    self.drawAlien(col)

    def considerAlienShot(self, shot):
        if self.player.isHit(shot):
            self.alienShots.remove(shot)
            self.player.removeLife()
            self.addScore(self.player.score)
        
    def computeAlienShots(self):
        for shot in self.alienShots:
            if not shot.isInScreen():
                self.alienShots.remove(shot)
                continue
            else:
                shot.update()
                shot.draw()
                self.considerAlienShot(shot)
    
    def considerPlayerShot(self, shot):
        if self.specialAlien.isHit(shot):
            self.addScore(self.specialAlien.score)
            self.specialAlien.consider = False
        for row in self.aliens:
            for col in row:
                if col.isHit(shot):
                    self.addScore(col.score)
                    col.consider = False
                    self.playerShots.remove(shot)

    def computePlayerShots(self):
        for shot in self.playerShots:
            if not shot.isInScreen():
                self.playerShots.remove(shot)
            else:
                shot.update()
                shot.draw()
                self.considerPlayerShot(shot)

    def isGameOver(self):
        return self.player.lives == 0 or not self.aliensExist

    def update(self):
        self.display.drawAll(screen, score, self.lives)
        score = self.shotEngine.considerShotsOnNormalAliens(self.aliens, self.score)
        score = self.shotEngine.considerShotsOnSpecialAlien(self.specialAlien, self.score)
        self.computeInput()
        self.player.update()
        self.player.draw()
        self.drawAliens()
        self.specialAlien.draw()
        self.player.dx = 0
        self.makeRandomShots()
        self.computeAlienShots()
        self.computePlayerShots()
        if self.isGameOver():
            self.running = False
        self.ticks += 1
        if(self.isLucky(0.9999)):
            self.spawnSpecialAlien()

    def isRunning(self):
        return self.running
